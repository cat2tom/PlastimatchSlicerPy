import vtkSlicerPlastimatchModuleLogicPython
reg = vtkSlicerPlastimatchModuleLogicPython.vtkSlicerPlastimatchLogic()

# Set scene
reg.SetMRMLScene(slicer.mrmlScene)

# Set input object names
img_fixed = "Img1" 
img_moving = "Img2"
xf_in = "AffineTransformation"

# Set input/output images and input transformation 
reg.SetFixedId(getNode(img_fixed).GetID())
reg.SetMovingId(getNode(img_moving).GetID())
reg.SetInputXfId(getNode(xf_in).GetID())
reg.SetOutputVolumeId(getNode(img_moving).GetID())

# Add stage and set the parameters
reg.AddStage()
reg.SetPar("xform", "bspline")
reg.SetPar("optim", "lbfgsb")
reg.SetPar("impl", "plastimatch")
reg.SetPar("metric", "mse")
reg.SetPar("max_its", "150")
reg.SetPar("convergence_tol", "5")
reg.SetPar("grad_tol", "1.5")
reg.SetPar("res", "4 4 2")
reg.SetPar("grid_spac", "80 80 80")

# Run registration
reg.RunRegistration()
